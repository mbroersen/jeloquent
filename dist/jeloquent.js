var R=Object.defineProperty;var n=(a,e)=>R(a,"name",{value:e,configurable:!0});var d=class{constructor(e,t){this.isPrimary=t??!1,this.$name=e,this.$fieldValue=null,this.$previousValue=void 0,this.$originalValue=void 0,this.$parent=null}get isDirty(){return this.$fieldValue!=this.$previousValue}get originalValue(){return this.$originalValue}get previousValue(){return this.$previousValue}get value(){return this.$fieldValue}set value(e){this.$fieldValue=e}setName(){return this}setup(e){return this.$parent=e,this.setName().setParentProperties()}tableSetup(){}addParentFieldValueLookUp(){Object.defineProperty(this.$parent,this.$name,{get:()=>this.value,set:e=>{this.$previousValue===void 0&&(this.$previousValue=JSON.parse(JSON.stringify(this.value??e))),this.$originalValue===void 0&&(this.$originalValue=JSON.parse(JSON.stringify(this.value??e))),this.$previousValue=JSON.parse(JSON.stringify(this.value)),this.value=e}})}addParentOriginalValueLookUp(){Object.defineProperty(this.$parent,`original_${this.$name}`,{get:()=>this.originalValue})}setParentProperties(){return this.addParentFieldValueLookUp(),this.addParentOriginalValueLookUp(),this.setFillPropertyOnParent(),this}setFillPropertyOnParent(){Object.defineProperty(this.$parent,`_${this.$name}`,{set:e=>{this.$originalValue===void 0&&(this.$originalValue=JSON.parse(JSON.stringify(this.value))),this.$previousValue=JSON.parse(JSON.stringify(this.value)),this.$fieldValue=e}})}resetDirty(){this.$originalValue=JSON.parse(JSON.stringify(this.$fieldValue)),this.$previousValue=JSON.parse(JSON.stringify(this.$fieldValue))}toJson(){let e={};return e[this.$name]=this.value,JSON.parse(JSON.stringify(e))}};n(d,"Field");var c=class extends d{constructor(e,t){super(e);this.foreignKey=e??t}setRelation(e){return this.relation=e,this}get value(){return this.$fieldValue}set value(e){this.$fieldValue=e}tableSetup(e){e.registerIndex(this.foreignKey)}};n(c,"ForeignKey");var l=class extends d{constructor(e,t,s){let r=s??e.snakeCaseClassName;super(r);this.model=e,this.foreignKey=t}tableSetup(e){e.registerIndex(this.foreignKey)}getRelationalFields(){return[new c(this.foreignKey).setRelation(this)]}setFillPropertyOnParent(){Object.defineProperty(this.$parent,`_${this.$name}`,{set:e=>{Array.isArray(e)||(e=[e]),e.forEach(t=>{this.model.ids().includes(t.id)||this.model.insert(t)})}})}};n(l,"Relation");var b=class extends l{constructor(e,t,s,r){super(e,s);this.model=e,this.throughModel=t,this.localKey=r??"id"}get indexName(){return`${this._lcThroughModelClassName}.${this._lcParentClassName}_id`}get value(){return this.getValueByParentKey("primaryKey")}get originalValue(){return this.getValueByParentKey("originalPrimaryKey")}getValueByParentKey(e){let t=this.model.getIndexByKey(this.indexName);return globalThis.Store.database().find(this.model.className,[...t.get(this.$parent[e])?.values()??[]])}setName(){return this._lcThroughModelClassName=this.throughModel.snakeCaseClassName,this._lcModelClassName=this.model.snakeCaseClassName,this._lcParentClassName=this.$parent.snakeCaseClassName,this.foreignKey=`${this._lcThroughModelClassName}_id`,this.$name=`${this._lcModelClassName}s`,this}tableSetup(){this.model.registerIndex(this.indexName)}getRelationalFields(){return[]}};n(b,"HasManyThrough");var x=class extends l{constructor(e,t,s){super(e,t);this.localKey=s??"id"}get count(){return globalThis.Store.database().indexes(this.model.className).get(this.foreignKey).get(this.$parent.primaryKey)?.size??0}get value(){return this.getValueByParentKey("primaryKey")}get originalValue(){return this.getValueByParentKey("originalPrimaryKey")}getValueByParentKey(e){let t=this.model.getIndexByKey(this.foreignKey);return globalThis.Store.database().find(this.model.className,[...t.get(this.$parent[e])?.values()??[]])}setName(){let e=this.$parent.snakeCaseClassName,t=this.model.snakeCaseClassName;return this.foreignKey=`${e}_id`,this.$name=`${t}s`,this}getRelationalFields(){return[]}setParentProperties(){return super.setParentProperties(),Object.defineProperty(this.$parent,`${this.$name}Count`,{get:()=>this.count}),Object.defineProperty(this.$parent,`has${this.model.className}s`,{get:()=>this.count>0}),this}};n(x,"HasMany");var w=class extends l{constructor(e,t,s){super(e,t??`${e.snakeCaseClassName}_id`,s)}get value(){return this.model.find(this.$parent[this.foreignKey])}get originalValue(){return this.model.find(this.$parent[`original_${this.foreignKey}`])}set value(e){}setName(){let e=this.model.snakeCaseClassName;return this.$name=this.$name??`${e}`,this}setParentProperties(){super.setParentProperties();let e="";for(let t of this.$name.split("_"))e+=t[0].toUpperCase()+t.slice(1);return Object.defineProperty(this.$parent,`has${e}`,{get:()=>this.value!==null}),this}};n(w,"BelongsTo");var C=class extends l{constructor(e){super(e)}get value(){return this.getValueByParentKey("primaryKey")}get originalValue(){return this.getValueByParentKey("originalPrimaryKey")}getValueByParentKey(e){let t=this.$parent.className,s=this.$parent[e],r=`${this.$name}_id`,i=`${this.$name}_type`,o={};return o[r]=s,o[i]=t,this.model.find(o)}getRelationalFields(){return[]}};n(C,"MorphOne");var S=class extends l{constructor(e){super(e)}get value(){return this.getValueByParentKey("primaryKey")}get originalValue(){return this.getValueByParentKey("originalPrimaryKey")}getValueByParentKey(e){let t=this.model.getIndexByKey(this.foreignKey);return globalThis.Store.database().find(this.model.className,[...t.get(this.$parent[e])?.values()??[]]).first()}setName(){return this.foreignKey=`${this.$parent.snakeCaseClassName}_id`,this}getRelationalFields(){return[]}setParentProperties(){return super.setParentProperties(),Object.defineProperty(this.$parent,`has${this.model.className}`,{get:()=>this.value!==null}),this}};n(S,"HasOne");var F=class extends l{constructor(e,t,s,r){super(e,s);this.throughModel=t,this.localKey=r??"id"}get value(){return this.$parent[this._lcThroughModelClassName][this._lcModelClassName]??null}get originalValue(){return this.$parent[`original_${this._lcThroughModelClassName}`][`original_${this._lcModelClassName}`]??null}get indexName(){return`${this._lcThroughModelClassName}.${this._lcParentClassName}_id`}setName(){return this._lcThroughModelClassName=this.throughModel.snakeCaseClassName,this._lcModelClassName=this.model.snakeCaseClassName,this._lcParentClassName=this.$parent.snakeCaseClassName,this.foreignKey=`${this._lcThroughModelClassName}_id`,this.$name=`${this._lcModelClassName}`,this}getRelationalFields(){return[]}};n(F,"HasOneThrough");var I=class extends d{constructor(e){super(e)}get value(){let e=this.$parent.snakeCaseClassName,t=this.$parent[`${e}_type`],s=this.$parent[`${e}_id`];return globalThis.Store.classInstances[t].constructor.find(s)}setFillPropertyOnParent(){Object.defineProperty(this.$parent,`_${this.$name}`,{set:e=>{Array.isArray(e)||(e=[e]);let t=this.$parent.snakeCaseClassName,s=`${t}_type`,r=`${t}_id`;for(let i of e)i.id=i[r],globalThis.Store.classInstances[i[s]].constructor.insert(i)}})}};n(I,"MorphTo");var p=class{constructor(){this.indexes=new Map,this.indexedFields=new Set,this.splittedIndexNames=new Map}static registerIndex(e,t){globalThis.Store.database().registerIndex(e.className,t)}static addIndex(e,t){globalThis.Store.database().addIndex(e.className,t.foreignKey,t.fieldValue,e.primaryKey)}static removeIndex(e,t){globalThis.Store.database().removeIndex(e.className,t.foreignKey,t.previousValue,e.primaryKey)}static removeTmpIdFromIndex(e){let t=e.className;e.dirtyFields.filter(s=>s instanceof c).forEach(s=>{globalThis.Store.database().removeIndex(t,s.$name,s.originalValue,e._tmpId)})}getIndexByKey(e){return this.indexes.get(e)}registerIndex(e){this.indexes.has(e)||(this.indexedFields.add(e),this.splittedIndexNames.set(e,e.split(".")),this.indexes.set(e,new Map))}addValue(e,t,s){if(!this.indexes.has(e)||s===null)return;let r=this.indexes?.get(e);if(!r.has(t)){this.registerLookUpKey(e,t,s);return}r=r?.get(t),!r.has(s)&&r.add(s)}removeValue(e,t,s){this.indexes?.get(e)?.get(t)?.delete(s)}registerLookUpKey(e,t,s){this.indexes?.get(e)?.set(t,new Set([s]))}unregisterLookUpKey(e,t){this.indexes?.get(e)?.delete(t)}getLookUpValue(e,t){let s=this.splittedIndexNames.get(t),r=e;for(let i of s){if(r[`original_${i}`]===null)break;r=r[`original_${i}`]}return r??null}addValueByModel(e){for(let[t]of this.indexes)this.addValue(t,this.getLookUpValue(e,t),e.primaryKey)}removeValueByModel(e){for(let[t]of this.indexes)this.removeValue(t,this.getLookUpValue(e,t),e.primaryKey)}truncate(){for(let e in this.indexes)this.indexes.get(e).clear()}};n(p,"Index");var f=class{constructor(e){this.setFields(this.addRelationFields(e)),this._tmpId=`_${++globalThis.Store.numberOfModelCreated}`}get className(){return this.constructor.className}get primaryKey(){return this.primaryFields.reduce((e,t,s)=>s>0?`${e}-${t.value}`:t.value,"")??this._tmpId??null}get originalPrimaryKey(){return this.primaryFields.reduce((e,t,s)=>s>0?`${e}-${t.originalValue}`:t.originalValue,"")??this._tmpId??null}get primaryKeyName(){return this.originalFields.filter(e=>e.isPrimary).map(e=>e.$name)}get originalValues(){return this.originalFields.reduce((e,t)=>(t.originalValue!==void 0&&(e[t.$name]=t.originalValue),e),{})}get dirtyFields(){return this.originalFields.filter(e=>e.isDirty)}get dirtyFieldNames(){return this.dirtyFields.map(e=>e.$name)}get snakeCaseClassName(){return this.constructor.snakeCaseClassName}get kebabCaseClassName(){return this.constructor.kebabCaseClassName}static get snakeCaseClassName(){return this.snakeCaseName||(this.snakeCaseName=this.name[0].toLowerCase()+this.name.slice(1).replace(/([A-Z])/g,"_$1").toLowerCase()),this.snakeCaseName}static get kebabCaseClassName(){return this.kebabCaseName||(this.kebabCaseName=this.name[0].toLowerCase()+this.name.slice(1).replace(/([A-Z])/g,"-$1").toLowerCase()),this.kebabCaseName}static get className(){return this.name}static getInstance(){let e=globalThis.Store.classInstances[this.className]??(globalThis.Store.classInstances[this.className]=new this),t=e.originalFields.reduce((s,r)=>(s.push(Object.assign(Object.create(Object.getPrototypeOf(r)),r)),s),[]);return Object.create(Object.getPrototypeOf(e)).setFields(t)}static registerIndex(e){p.registerIndex(this.getInstance(),e)}static getIndexByKey(e){let t=this.className;return globalThis.Store.database().getIndexByKey(t,e)}static aSyncInsert(e){return new Promise(t=>{requestAnimationFrame(()=>{t(this.insert(e))})})}static insert(e){e=Array.isArray(e)?e:[e];let t=e.length;for(let s=0;s<t;s++){let r=e[s],i=this.getInstance();i.fill(r),globalThis.Store.database().insert(this.className,i),i.fillRelations(r),e[s]=i}return e}static update(e){let t=new this;return t.fill(e),globalThis.Store.database().update(this.className,t),t}static delete(e){globalThis.Store.database().delete(this.className,e)}static find(e){return globalThis.Store.database().find(this.className,e)}static select(e){try{return globalThis.Store.database().select(this.className,e)}catch(t){console.error(t)}}static all(){return globalThis.Store.database().all(this.className)}static ids(){return globalThis.Store.database().ids(this.className)}tableSetup(e){for(let t=0;t<this.numberOfFields;t++)this.originalFields[t]instanceof c&&this.originalFields[t].tableSetup(e),this.originalFields[t]instanceof b&&this.originalFields[t].tableSetup(e)}isDirty(e){return e?this.dirtyFieldNames.includes(e):this.dirtyFields.length>0}resetDirty(){this.originalFields.filter(e=>!(e instanceof l)).forEach(e=>{e.resetDirty()})}delete(){this.constructor.delete(this.primaryKey)}save(){let e=this.className,t=globalThis.Store.database(),s=t.ids(e);if(this.primaryKey[0]!=="_"&&s.includes(this._tmpId)&&(p.removeTmpIdFromIndex(this),t.delete(e,this._tmpId)),s.includes(this.primaryKey)){t.update(e,this);return}t.insert(e,this)}registerIndex(e){p.registerIndex(this,e)}fill(e){for(let t=0;t<this.numberOfFields;t++)if(!(this.originalFields[t]instanceof l)){let s=this.originalFields[t].$name;e[s]!==void 0&&(this[`_${s}`]=e[s])}}fillRelations(e){for(let t=0;t<this.numberOfFields;t++)if(this.originalFields[t]instanceof l){let s=this.originalFields[t].$name;e[s]!==void 0&&(this[`_${s}`]=e[s])}}addRelationFields(e){let t=[...e];return e.forEach((s,r)=>{s instanceof l&&t.splice(r,0,...s.getRelationalFields())}),this.numberOfFields=t.length,t}setFields(e){this.originalFields=[...e],this.numberOfFields=this.originalFields.length;for(let t=0;t<this.numberOfFields;t++)this.originalFields[t].setup(this);return Object.defineProperty(this,"indexedFields",{get:()=>this.originalFields.filter(t=>t instanceof c).reduce((t,s)=>(t.add(s.$name),t),new Set)}),this.primaryFields=this.originalFields.filter(t=>t.isPrimary),this}jsonStringify(){return JSON.stringify(this.toObject())}toJson(){return this.toObject()}toObject(e){let t={};for(let s=0;s<this.originalFields.length;s++){let r=this.originalFields[s];if(!(r instanceof l&&e)){if(t[r.$name]=r.value,t[r.$name]instanceof f){t[r.$name]=t[r.$name].toObject(!0);continue}t[r.$name]instanceof Array&&(t[r.$name]=[...t[r.$name].map(i=>i?.toObject(!0)??i)])}}return{...t}}};n(f,"Model");var m=class extends Array{constructor(...e){super(...e)}_getRowFieldResult(e,t){let s=e[t[0]]??null;for(let r=1;r<t.length;r++){let i=t[r];if(s===null)break;if(s instanceof m)return s.pluck(t[r]);s=s[i]??null}return s}pluck(e,t){let s=e.split(".");if(t){let i=t.split("."),o={};for(let _ in this)o[this._getRowFieldResult(this[_],i)]=this._getRowFieldResult(this[_],s);return o}let r=[];for(let i in this)r.push(this._getRowFieldResult(this[i],s));return r}first(){return this[0]??null}last(){return this.slice(-1)[0]??null}merge(e){return this.push(...e),this}random(){return this[Math.round((this.length-1)*Math.random())]}unique(e){let t={};for(let s in this)t[this[s][e]]=this[s];return new m(...Object.values(t))}jsonStringify(){return JSON.stringify(this)}whereIfFunction(e,t){let s=new m;for(let r in this)t(e,this[r])&&s.push(this[r]);return s}where(e,t,s){s=s??t,t=t===s?"==":t;let r={">"(i,o){return i>o},">="(i,o){return i>=o},"<"(i,o){return i<o},"<="(i,o){return i<=o},"!="(i,o){return i!=o},"=="(i,o){return i==o}};if(!Object.prototype.hasOwnProperty.call(r,t))throw new Error("Invalid comparison operator used");return this.whereIfFunction(e,(i,o)=>r[t](o[i],s))}whereBetween(e,t){return this.whereIfFunction(e,(s,r)=>{let i=r[s];return i>=t[0]&&i<=t[1]})}whereNotBetween(e,t){return this.whereIfFunction(e,(s,r)=>{let i=r[s];return!(i>=t[0]&&i<=t[1])})}whereNull(e){return this.whereIfFunction(e,(t,s)=>s[t]===null)}whereNotNull(e){return this.whereIfFunction(e,(t,s)=>s[t]!==null)}whereIn(e,t){return this.whereIfFunction(e,(s,r)=>t.includes(r[s]))}whereNotIn(e,t){return this.whereIfFunction(e,(s,r)=>!t.includes(r[s]))}whereInstanceOf(e){return this.whereIfFunction(null,(t,s)=>s instanceof e)}whereNotInstanceOf(e){return this.whereIfFunction(null,(t,s)=>!(s instanceof e))}};n(m,"Collection");var y=class{constructor(e){this.setup(e.getInstance())}setup(e){this.model=e,this.name=e.className,this.models=new Map,this.index=new p,this.primaryKeyFieldNames=e.primaryKeyName}setupIndexes(){this.model.tableSetup(this)}registerIndex(e){this.index.registerIndex(e)}addIndex(e,t,s){this.index.addValue(e,t,s)}removeIndex(e,t,s){this.index.removeValue(e,t,s)}getIndexByKey(e){return this.index.getIndexByKey(e)}get indexes(){return this.index.indexes}allModels(){return this.models}ids(){return[...this.models.keys()]}all(){let e=[...this.models.values()],t=e.length,s=new m;for(let r=0;r<t;r+=1e4)s.push(...e.slice(r,r+1e4));return s}insert(e){if(this.models.has(e.primaryKey))throw new Error("Record already exists");if(!(e instanceof f))throw new Error("Record should be instance of model");e.resetDirty(),e.primaryKey!=null&&this.models.set(e.primaryKey,e),this.index.addValueByModel(e)}update(e){if(!this.models.has(e.primaryKey))throw new Error("Record doesn't exists");if(!(e instanceof f))throw new Error("Record should be instance of model");this.index.removeValueByModel(e),e.resetDirty(),this.index.addValueByModel(e),this.models.set(e.primaryKey,e)}delete(e){if(!this.models.has(e))throw new Error("Record doesn't exists");this.index.removeValueByModel(this.find(e)),this.models.delete(e)}truncate(){this.models.clear(),this.index.truncate()}getKey(e){if(typeof e=="string")return e;if(e===null)return null;let t=[];for(let s=0;s<this.primaryKeyFieldNames.length;s++)t.push(e[this.primaryKeyFieldNames[s]]??"");return t.join("-")}find(e){let t=this.primaryKeyFieldNames.length>1;if(Array.isArray(e)){let s=[],r=t?i=>{s.push(this.models.get(this.getKey(e[i]))??null)}:i=>{s.push(this.models.get(e[i])??null)};for(let i=0;i<e.length;i++)r(i);return new m(...s)}return t?this.models.get(this.getKey(e))??null:this.models.get(e)??null}select(e){if(!this.models.has(e))throw new Error("Record doesn't exists");return this.find(e)}};n(y,"Table");var K=class{constructor(e,t){this.name=e,this.tables={},t.forEach(s=>{let r=new y(s);this.tables[r.name]=r})}setIndexes(){Object.values(this.tables).forEach(e=>{e.setupIndexes()})}showTables(){return Object.keys(this.tables)}ids(e){return this.tables[e].ids()}all(e){return this.tables[e].all()}allModels(e){return this.tables[e].allModels()}registerIndex(e,t){this.tables[e].registerIndex(t)}addIndex(e,t,s,r){return this.tables[e].addIndex(t,s,r)}removeIndex(e,t,s,r){return this.tables[e].removeIndex(t,s,r)}getIndexByKey(e,t){return this.tables[e].getIndexByKey(t)}unregisterLookUpKey(e,t,s){this.tables[e].unregisterLookUpKey(t,s)}indexes(e){return this.tables[e].indexes}insert(e,t){return this.tables[e].insert(t)}update(e,t){return this.tables[e].update(t)}find(e,t){return this.tables[e].find(t)}select(e,t){return this.tables[e].select(t)}delete(e,t){return this.tables[e].delete(t)}drop(e){delete this.tables[e]}truncate(e){return this.tables[e].truncate()}query(e){let t=e.match(/^((SELECT)|(INSERT)|(DELETE))\s+(.*)\s+FROM\s+([^\s]+)(\s+WHERE\s+([^\s]+)\s+(=)\s+([^\s+]))?((\s+)|;)?$/i);if(t.length===0)return null;let s=t[1],r=t[6],i=t[8],o=t[10];return i==="id"?this[s.toLowerCase()](r,o):i===void 0&&s==="SELECT"?this.all(r):null}};n(K,"Database");var $=class{constructor(){this.contentType="application/json",this.mode="cors",this.cache="no-cache",this.headers={},this.baseUrl="http://localhost"}setBaseUrl(e){return this.baseUrl=e??"http://localhost",this}getBaseUrl(){return this.baseUrl}getSettings(){return{mode:this.mode,cache:this.cache,headers:{Accept:this.contentType,"Content-Type":this.contentType,...this.headers},redirect:"follow",referrerPolicy:"no-referrer"}}};n($,"ConnectionSettings");var u=class{constructor(e){if(!(e instanceof $)){this.connectionSettings=new $().setBaseUrl(e?.url);return}this.connectionSettings=e}load(e){throw new Error(`should be extended called for ${e.className}`)}all(e){throw new Error(`should be extended called for ${e.className}`)}get(e){throw new Error(`should be extended called for ${e.className}`)}put(e){throw new Error(`should be extended called for ${e.className}`)}patch(e){throw new Error(`should be extended called for ${e.className}`)}post(e){throw new Error(`should be extended called for ${e.className}`)}delete(e){throw new Error(`should be extended called for ${e.className}`)}};n(u,"ConnectionAdapter");var h=class{constructor(e,t,s){this.model=e,this.action=t,this.data=s}addCallback(e){this.callback=e}execute(){this.model[this.action](this.data),(this.callback??(()=>{}))()}};n(h,"QueueMessage");var g=class{constructor(e){this.connectionRequestSettings=e}modelApiLocation(e){return`${this.connectionRequestSettings.getBaseUrl()}/${e.kebabCaseClassName}`}post(e){return fetch(this.modelApiLocation(e),{method:"POST",body:JSON.stringify(e.jsonStringify()),...this.connectionRequestSettings.getSettings()})}all(e){return fetch(`${this.modelApiLocation(e)}`,{method:"GET",...this.connectionRequestSettings.getSettings()})}get(e){return fetch(`${this.modelApiLocation(e)}/${e.primaryKey}`,{method:"GET",...this.connectionRequestSettings.getSettings()})}patch(e){return fetch(`${this.modelApiLocation(e)}/${e.primaryKey}`,{method:"PATCH",body:JSON.stringify(e.dirtyFields),...this.connectionRequestSettings.getSettings()})}put(e){return fetch(`${this.modelApiLocation(e)}/`,{method:"PUT",body:JSON.stringify(e.jsonStringify()),...this.connectionRequestSettings.getSettings()})}delete(e){return fetch(`${this.modelApiLocation(e)}/${e.primaryKey}`,{method:"DELETE",...this.connectionRequestSettings.getSettings()})}};n(g,"ConnectionRequest");var N=class extends u{constructor(e){super(e)}get isRemote(){return!0}get isLocal(){return!1}load(e){return this.all(e)}responseJson(e){return e.json()}all(e){return new Promise(t=>{new g(this.connectionSettings).all(e).then(s=>this.responseJson(s)).then(s=>{let r=new h(e,"insert",s);t(r)})})}get(e){return new Promise(t=>{new g(this.connectionSettings).get(e).then(s=>this.responseJson(s)).then(s=>{let r=new h(e,"fill",s);t(r)})})}post(e){return new Promise(t=>{new g(this.connectionSettings).post(e).then(s=>this.responseJson(s)).then(s=>{let r=new h(e,"fill",s);t(r)})})}put(e){return new Promise(t=>{new g(this.connectionSettings).put(e).then(s=>this.responseJson(s)).then(s=>{let r=new h(e,"fill",s);t(r)})})}patch(e){return new Promise(t=>{new g(this.connectionSettings).patch(e).then(s=>this.responseJson(s)).then(s=>{let r=new h(e,"fill",s);t(r)})})}delete(e){return new Promise(t=>{new g(this.connectionSettings).delete(e).then(s=>this.responseJson(s)).then(s=>{let r=new h(e,"delete",s);t(r)})})}};n(N,"JsonRequestAdapter");var P=class extends u{constructor(e){super(e)}load(e){return new Promise(t=>{t(new h(e,"aSyncInsert",this.getTableFromLocalStorage(e)))})}getLocalStorageKey(e){return`jeloquent-${globalThis.Store.use}-${e.className}`}getTableFromLocalStorage(e){return JSON.parse(localStorage.getItem(this.getLocalStorageKey(e))??"[]")}post(e,t){localStorage.setItem(this.getLocalStorageKey(e),JSON.stringify(t))}};n(P,"LocalStorageAdapter");var V=class extends u{constructor(e){super(e)}load(e){return new Promise(t=>{t(new h(e,"insert",this.options[e.className()]))})}};n(V,"LocalArrayAdapter");var O=class{static getAdapter(e,t){return e==="jsonRequest"?new N(t):e==="localStorage"?new P(t):e==="localArray"?new V(t):new N(t)}};n(O,"ConnectionAdapterFactory");var T=class{constructor(e,t){e instanceof u?this.adapter=e:this.adapter=O.getAdapter(e,t),this.updateQueue=[],this.paused=!1}processQueue(){let e=(this.updateQueue??[]).shift();!e||(e.execute(),setTimeout(()=>{this.processQueue()},1))}addToQueue(...e){this.updateQueue.push(...e)}pause(){this.paused=!0}resume(){this.paused=!1}load(e){return this.all(e)}all(e){return new Promise(t=>{this.adapter.all(e).then(s=>{s.addCallback(t),this.addToQueue(s),setTimeout(()=>{this.processQueue()},1)})})}post(e){return new Promise(t=>{this.adapter.post(e).then(s=>{s.addCallback(t),this.addToQueue(s),setTimeout(()=>{this.processQueue()},1)})})}put(e){return new Promise(t=>{this.adapter.put(e).then(s=>{s.addCallback(t),this.addToQueue(s),setTimeout(()=>{this.processQueue()},1)})})}patch(e){return new Promise(t=>{this.adapter.patch(e).then(s=>{s.addCallback(t),this.addToQueue(s),setTimeout(()=>{this.processQueue()},1)})})}delete(e){return new Promise(t=>{this.adapter.delete(e).then(s=>{s.addCallback(t),this.addToQueue(s),setTimeout(()=>{this.processQueue()},1)})})}};n(T,"Connection");var k=class{constructor(){this.classInstances={},this.databases={},this.connetions={},this.numberOfModelCreated=0,this.useDatabase="default",this.useConnection="default",globalThis.Store=this}use(e){this.useDatabase=e,this.databases[this.useDatabase??"default"]?.setIndexes()}add(e){this.databases[e.name]=e}addConnections(e,t){this.connetions[t??"default"]=e}useConnection(e){this.useConnection=e??"default"}database(){return this.databases[this.useDatabase]??null}connection(){return this.connetions[this.useConnection]}};n(k,"Store");export{w as BelongsTo,m as Collection,T as Connection,u as ConnectionAdapter,O as ConnectionAdapterFactory,K as Database,d as Field,c as ForeignKey,x as HasMany,b as HasManyThrough,S as HasOne,F as HasOneThrough,f as Model,C as MorphOne,I as MorphTo,h as QueueMessage,l as Relation,k as Store,y as Table};
